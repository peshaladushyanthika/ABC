name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: abc_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U laravel"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          # extensions: mbstring, xml, bcmath, curl, pgsql
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=512M

      # - name: Install dependencies
      #   run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # - name: Generate application key
      #   run: php artisan key:generate

      - name: Run database migrations
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: abc_test  # Ensure this matches your .env file
          DB_USERNAME: postgres
          DB_PASSWORD: 123456
        run: php artisan migrate --force

      - name: Run tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: abc_test  # Ensure this matches your .env file
          DB_USERNAME: postgres
          DB_PASSWORD: 123456
        run: php artisan test

  # Optional deployment job
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Deploy to Server
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
  #       run: |
  #         ssh user@server "cd /path/to/laravel-app && git pull && composer install --no-dev --optimize-autoloader && php artisan migrate --force && php artisan config:cache && php artisan route:cache && php artisan view:cache && sudo systemctl restart nginx"
